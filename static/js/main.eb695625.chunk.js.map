{"version":3,"sources":["components/Option/index.js","components/FetchItem/index.js","components/home/index.js","components/FetchData/index.js","App.js","reportWebVitals.js","index.js"],"names":["Option","renderValue","event","selectedOption","props","target","value","this","eachOption","yes","optionClassName","selectedOptionState","className","onClick","Component","FetchItem","state","timer","correctAnswerState","wrongAnswer","visible","updateTimer","clockId","setInterval","updateCounter","setState","prevState","validateAnswers","correct","wrong","renderA","counter","a","eachQuestion","updatingAnswers","correctAnswer","updateQuestion","question","answers","map","index","Home","changeStateLanguage","updateLevel","FetchData","myData","isHideHome","isHideQuestion","isHideResults","stopTimer","clearInterval","level","fetchData","setTimeout","bind","fetch","response","json","data","results","eachItem","id","category","correct_answer","difficulty","incorrectAnswers","incorrect_answers","type","formattedData","refreshPage","window","location","reload","renderAnswers","console","log","filterData","filter","filteredData","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2WAgCeA,E,4MA3BbC,YAAc,SAACC,IAGbC,EAF2B,EAAKC,MAAxBD,gBACUD,EAAMG,OAAhBC,Q,4CAIV,WACE,MAAiDC,KAAKH,MAA9CI,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,IAIdC,EAJN,EAAyBC,sBAEiBH,EACzBC,EAAM,UAAY,QACY,KAE/C,OACE,oBAAIG,UAAU,cAAd,SACE,wBACEA,UAAS,iBAAYF,GACrBG,QAASN,KAAKN,YACdK,MAAOE,EAHT,SAKGA,U,GArBUM,aCiGNC,G,kNA9FbC,MAAQ,CACNC,MAAO,EACPR,IAAK,KACLE,oBAAqB,KACrBO,mBAAoB,EACpBC,YAAa,EACbC,SAAS,G,EAGXC,YAAc,WACZ,EAAKC,QAAUC,YAAY,EAAKC,cAAe,M,EAGjDA,cAAgB,WACd,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BT,MAAOS,EAAUT,MAAQ,O,EAI7BU,gBAAkB,WAChB,MAA2B,EAAKvB,MAAxBwB,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAEjB,OADoB,EAAKb,MAAjBI,QACS,KACf,qCACE,mBAAGR,UAAU,KAAb,SAAmBgB,IACnB,oBAAGhB,UAAU,MAAb,UAAoBiB,EAApB,W,EASNC,QAAU,SAACC,GACLA,EAAU,GACZ,EAAKN,SAAS,CAAEL,SAAS,IAEzB,EAAKK,SAAS,CAAEL,SAAS,K,EAI7BjB,e,uCAAiB,WAAOG,GAAP,qBAAA0B,EAAA,+DAC2B,EAAK5B,MAAvC6B,EADO,EACPA,aAAcC,EADP,EACOA,gBACdC,EAAkBF,EAAlBE,cAFO,SAIT,EAAKV,SAAS,CAAEd,oBAAqBL,IAJ5B,OAKX6B,IAAkB7B,GACpB4B,EAAgB,EAAG,GACnB,EAAKT,SAAS,CAAEhB,KAAK,IACrB,EAAKgB,UAAS,SAACC,GAAD,MAAgB,CAC5BP,YAAaO,EAAUP,YAAc,OAE9BgB,IAAkB7B,IAC3B4B,EAAgB,EAAG,GACnB,EAAKT,SAAS,CAAEhB,KAAK,IACrB,EAAKgB,UAAS,SAACC,GAAD,MAAgB,CAC5BR,mBAAoBQ,EAAUR,mBAAqB,OAfxC,2C,6GAZjB,WACEX,KAAKc,gB,oBA+BP,WAAU,IAAD,OACP,EAAyCd,KAAKH,MAAtC6B,EAAR,EAAQA,aAAcG,EAAtB,EAAsBA,eACtB,EAA4C7B,KAAKS,MAAzCC,EAAR,EAAQA,MAAOR,EAAf,EAAeA,IAAKE,EAApB,EAAoBA,oBACZS,EAAYb,KAAKS,MAAjBI,QAKR,OAJc,KAAVH,GACFmB,IAIA,qBAAIxB,UAAU,KAAd,UACGL,KAAKoB,kBACN,oBAAIf,UAAU,OAAd,SAAsBK,IACtB,sBAAKL,UAAU,UAAf,UACE,oBAAIA,UAAU,WAAd,SAA0BqB,EAAaI,WACtCjB,EACC,oBAAIR,UAAU,aAAd,SACGqB,EAAaK,QAAQC,KAAI,SAAC/B,EAAYgC,GAAb,OACxB,cAAC,EAAD,CACEhC,WAAYA,EACZL,eAAgB,EAAKA,eACrBM,IAAKA,EACLE,oBAAqBA,SAIzB,e,GAxFUG,cC8CT2B,G,kNA/CbC,oBAAsB,SAACxC,GACrB,IAAQI,EAAUJ,EAAMG,OAAhBC,OAGRqC,EAFwB,EAAKvC,MAArBuC,aAEIrC,I,4CAGd,WACE,OACE,qBAAKM,UAAU,uBAAf,SACE,sBAAKA,UAAU,UAAf,UACE,oBAAIA,UAAU,eAAd,+CACA,sBAAKA,UAAU,qBAAf,UACE,oBAAIA,UAAU,qBAAd,qCACA,sBAAKA,UAAU,oBAAf,UACE,wBACEA,UAAU,SACVN,MAAM,OAENO,QAASN,KAAKmC,oBAJhB,iBAGM,KAKN,wBACE9B,UAAU,SACVN,MAAM,SAENO,QAASN,KAAKmC,oBAJhB,mBAGM,KAKN,wBACE9B,UAAU,SACVN,MAAM,OAENO,QAASN,KAAKmC,oBAJhB,iBAGM,oB,GAnCD5B,cCsJJ8B,G,kNAhJb5B,MAAQ,CACN6B,OAAQ,GACRC,YAAY,EACZC,gBAAgB,EAChBhB,QAAS,EACTH,QAAS,EACTC,MAAO,EACPP,QAAS,EACT0B,eAAe,G,EAUjBC,UAAY,WACVC,cAAc,EAAK5B,U,EAGrBqB,YAAc,SAACQ,GACb,EAAKC,UAAUD,GACf,EAAK1B,UAAS,SAACC,GAAD,MAAgB,CAC5BoB,YAAapB,EAAUoB,WACvBE,eAAgBtB,EAAUsB,mB,EAI9BZ,eAAiB,WACf,EAAKX,UAAS,SAACC,GAAD,MAAgB,CAC5BK,QAASL,EAAUK,QAAU,O,EAIjCG,gBAAkB,SAACN,EAASC,GAC1B,EAAKJ,UAAS,SAACC,GAAD,MAAgB,CAC5BE,QAASF,EAAUE,QAAUA,MAE/B,EAAKH,UAAS,SAACC,GAAD,MAAgB,CAC5BG,MAAOH,EAAUG,MAAQA,MAE3BwB,WACE,WACE9C,KAAKkB,UAAS,SAACC,GAAD,MAAgB,CAC5BK,QAASL,EAAUK,QAAU,OAE/BuB,KAJF,gBAKA,M,EAIJF,U,uCAAY,WAAOD,GAAP,mBAAAnB,EAAA,sEACauB,MAAM,gEAAD,OACsCJ,IAFxD,cACJK,EADI,gBAISA,EAASC,OAJlB,cAIJC,EAJI,gBAKkBA,EAAKC,QAAQpB,KAAI,SAACqB,EAAUpB,GAAX,MAAsB,CACjEqB,GAAIrB,EAAQ,EACZsB,SAAUF,EAASE,SACnB3B,cAAeyB,EAASG,eACxBC,WAAYJ,EAASI,WACrBC,iBAAkBL,EAASM,kBAC3B7B,SAAUuB,EAASvB,SACnB8B,KAAMP,EAASO,KACf7B,QAAQ,GAAD,mBAAMsB,EAASM,mBAAf,CAAkCN,EAASG,qBAb1C,OAKJK,EALI,OAeV,EAAK3C,SAAS,CAAEoB,OAAQuB,IAfd,4C,wDAkBZC,YAAc,WACZC,OAAOC,SAASC,QAAO,I,EAGzBC,cAAgB,WACd,MAA0C,EAAKzD,MAAvCgC,EAAR,EAAQA,cAAepB,EAAvB,EAAuBA,QAASC,EAAhC,EAAgCA,MAEhC,OADA6C,QAAQC,IAAI3B,GACLA,EAAgB,KACrB,sBAAKpC,UAAU,YAAf,UACE,oBAAGA,UAAU,UAAb,6BACegB,GAAW,IACxB,sBAAMhB,UAAU,MAAhB,2BAAkCiB,QAEpC,mBAAGjB,UAAU,MAAb,+BACA,qBAAKA,UAAU,MAAf,SACE,wBAAQA,UAAU,SAASC,QAAS,EAAKwD,YAAzC,6B,EAQRO,WAAa,SAAC7C,GACZ,IAAQc,EAAW,EAAK7B,MAAhB6B,OACR,OAAgB,KAAZd,EACmBc,EAAOgC,QAC1B,SAACjB,GAAD,OAAcA,EAASC,KAAO9B,EAAU,KAGrB,KAAZA,EACYc,EAAOgC,QAAO,SAACjB,GAAD,OAA8B,KAAhBA,EAASC,WAG1D,EAAKZ,a,0DA9FT,WACEC,cAAc3C,KAAKe,W,+BAGrB,WACEf,KAAK6C,c,oBA6FP,WAAU,IAAD,OACP,EAAgE7C,KAAKS,MAA7D8B,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,eAAgBhB,EAApC,EAAoCA,QAASH,EAA7C,EAA6CA,QAASC,EAAtD,EAAsDA,MACtD6C,QAAQC,IAAI/C,EAASC,GACrB,IAAMiD,EAAevE,KAAKqE,WAAW7C,GACrC,OACE,sBAAKnB,UAAU,KAAf,UACGkC,EAAa,KACZ,qBAAKlC,UAAU,MAAf,SACE,cAAC,EAAD,CACE+B,YAAapC,KAAKoC,YAClBP,eAAgB7B,KAAK6B,mBAI1BW,EACC,qBAAInC,UAAU,KAAd,UACGL,KAAKkE,gBACLK,EAAavC,KAAI,SAACN,GAAD,OAChB,cAAC,EAAD,CAEEA,aAAcA,EACdC,gBAAiB,EAAKA,gBACtBN,QAASA,EACTC,MAAOA,EACPE,QAASA,EACTK,eAAgB,EAAKA,gBANhBH,EAAa4B,UAUtB,Y,GA3IY/C,c,MCGTiE,MARf,WACE,OACE,qBAAKnE,UAAU,MAAf,SACE,cAAC,EAAD,OCKSoE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.eb695625.chunk.js","sourcesContent":["import { Component } from \"react\";\n\nimport \"./index.css\";\n\nclass Option extends Component {\n  renderValue = (event) => {\n    const { selectedOption } = this.props;\n    const { value } = event.target;\n    selectedOption(value);\n  };\n\n  render() {\n    const { eachOption, yes, selectedOptionState } = this.props;\n\n    const className = selectedOptionState === eachOption;\n    const setColor = yes ? \"correct\" : \"False\";\n    const optionClassName = className ? setColor : null;\n\n    return (\n      <li className=\"option-card\">\n        <button\n          className={`option ${optionClassName}`}\n          onClick={this.renderValue}\n          value={eachOption}\n        >\n          {eachOption}\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Option;\n","import { Component } from \"react\";\n\nimport Option from \"../Option\";\n\nimport \"./index.css\";\n\nclass FetchItem extends Component {\n  state = {\n    timer: 0,\n    yes: null,\n    selectedOptionState: null,\n    correctAnswerState: 0,\n    wrongAnswer: 0,\n    visible: true,\n  };\n\n  updateTimer = () => {\n    this.clockId = setInterval(this.updateCounter, 1000);\n  };\n\n  updateCounter = () => {\n    this.setState((prevState) => ({\n      timer: prevState.timer + 1,\n    }));\n  };\n\n  validateAnswers = () => {\n    const { correct, wrong } = this.props;\n    const { visible } = this.state;\n    return visible ? null : (\n      <>\n        <p className=\"dd\">{correct}</p>\n        <p className=\"ddd\">{wrong}></p>\n      </>\n    );\n  };\n\n  componentDidMount() {\n    this.updateTimer();\n  }\n\n  renderA = (counter) => {\n    if (counter < 10) {\n      this.setState({ visible: true });\n    } else {\n      this.setState({ visible: false });\n    }\n  };\n\n  selectedOption = async (value) => {\n    const { eachQuestion, updatingAnswers } = this.props;\n    const { correctAnswer } = eachQuestion;\n\n    await this.setState({ selectedOptionState: value });\n    if (correctAnswer !== value) {\n      updatingAnswers(0, 1);\n      this.setState({ yes: false });\n      this.setState((prevState) => ({\n        wrongAnswer: prevState.wrongAnswer + 1,\n      }));\n    } else if (correctAnswer === value) {\n      updatingAnswers(1, 0);\n      this.setState({ yes: true });\n      this.setState((prevState) => ({\n        correctAnswerState: prevState.correctAnswerState + 1,\n      }));\n    }\n  };\n\n  render() {\n    const { eachQuestion, updateQuestion } = this.props;\n    const { timer, yes, selectedOptionState } = this.state;\n    const { visible } = this.state;\n    if (timer === 10) {\n      updateQuestion();\n    }\n\n    return (\n      <li className=\"li\">\n        {this.validateAnswers()}\n        <h1 className=\"time\">{timer}</h1>\n        <div className=\"content\">\n          <h1 className=\"question\">{eachQuestion.question}</h1>\n          {visible ? (\n            <ul className=\"options-ul\">\n              {eachQuestion.answers.map((eachOption, index) => (\n                <Option\n                  eachOption={eachOption}\n                  selectedOption={this.selectedOption}\n                  yes={yes}\n                  selectedOptionState={selectedOptionState}\n                />\n              ))}\n            </ul>\n          ) : null}\n        </div>\n      </li>\n    );\n  }\n}\n\nexport default FetchItem;\n","import { Component } from \"react\";\n\nimport \"./index.css\";\n\nclass Home extends Component {\n  changeStateLanguage = (event) => {\n    const { value } = event.target;\n    const { updateLevel } = this.props;\n\n    updateLevel(value);\n  };\n\n  render() {\n    return (\n      <div className=\"background-container\">\n        <div className=\"content\">\n          <h1 className=\"main-heading\">Computer science Quiz application</h1>\n          <div className=\"difficulty-content\">\n            <h1 className=\"difficulty-heading\">Select Difficulty Level</h1>\n            <div className=\"buttons-container\">\n              <button\n                className=\"button\"\n                value=\"easy\"\n                key=\"1\"\n                onClick={this.changeStateLanguage}\n              >\n                easy\n              </button>\n              <button\n                className=\"button\"\n                value=\"medium\"\n                key=\"2\"\n                onClick={this.changeStateLanguage}\n              >\n                medium\n              </button>\n              <button\n                className=\"button\"\n                value=\"hard\"\n                key=\"3\"\n                onClick={this.changeStateLanguage}\n              >\n                hard\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\n\nimport { Component } from \"react\";\n\nimport FetchItem from \"../FetchItem\";\nimport Home from \"../home\";\n\nimport \"./index.css\";\n\nclass FetchData extends Component {\n  state = {\n    myData: [],\n    isHideHome: false,\n    isHideQuestion: true,\n    counter: 0,\n    correct: 0,\n    wrong: 0,\n    clockId: 0,\n    isHideResults: true,\n  };\n\n  componentWillUnmount() {\n    clearInterval(this.clockId);\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n  stopTimer = () => {\n    clearInterval(this.clockId);\n  };\n\n  updateLevel = (level) => {\n    this.fetchData(level);\n    this.setState((prevState) => ({\n      isHideHome: !prevState.isHideHome,\n      isHideResults: !prevState.isHideResults,\n    }));\n  };\n\n  updateQuestion = () => {\n    this.setState((prevState) => ({\n      counter: prevState.counter + 1,\n    }));\n  };\n\n  updatingAnswers = (correct, wrong) => {\n    this.setState((prevState) => ({\n      correct: prevState.correct + correct,\n    }));\n    this.setState((prevState) => ({\n      wrong: prevState.wrong + wrong,\n    }));\n    setTimeout(\n      function () {\n        this.setState((prevState) => ({\n          counter: prevState.counter + 1,\n        }));\n      }.bind(this),\n      1000\n    );\n  };\n\n  fetchData = async (level) => {\n    const response = await fetch(\n      `https://opentdb.com/api.php?amount=10&category=18&difficulty=${level}`\n    );\n    const data = await response.json();\n    const formattedData = await data.results.map((eachItem, index) => ({\n      id: index + 1,\n      category: eachItem.category,\n      correctAnswer: eachItem.correct_answer,\n      difficulty: eachItem.difficulty,\n      incorrectAnswers: eachItem.incorrect_answers,\n      question: eachItem.question,\n      type: eachItem.type,\n      answers: [...eachItem.incorrect_answers, eachItem.correct_answer],\n    }));\n    this.setState({ myData: formattedData });\n  };\n\n  refreshPage = () => {\n    window.location.reload(false);\n  };\n\n  renderAnswers = () => {\n    const { isHideResults, correct, wrong } = this.state;\n    console.log(isHideResults);\n    return isHideResults ? null : (\n      <div className=\"answer-bg\">\n        <p className=\"answer1\">\n          {`correct: ${correct}`}{\" \"}\n          <span className=\"ans\">{`wrong : ${wrong}`}</span>\n        </p>\n        <p className=\"try\">Try Another Level</p>\n        <div className=\"but\">\n          <button className=\"button\" onClick={this.refreshPage}>\n            Home Page\n          </button>\n        </div>\n      </div>\n    );\n  };\n\n  filterData = (counter) => {\n    const { myData } = this.state;\n    if (counter !== 10) {\n      const filteredData = myData.filter(\n        (eachItem) => eachItem.id === counter + 1\n      );\n      return filteredData;\n    } else if (counter === 10) {\n      const filteredData = myData.filter((eachItem) => eachItem.id === 10);\n      return filteredData;\n    } else {\n      this.stopTimer();\n    }\n  };\n\n  render() {\n    const { isHideHome, isHideQuestion, counter, correct, wrong } = this.state;\n    console.log(correct, wrong);\n    const filteredData = this.filterData(counter);\n    return (\n      <div className=\"bg\">\n        {isHideHome ? null : (\n          <div className=\"sfd\">\n            <Home\n              updateLevel={this.updateLevel}\n              updateQuestion={this.updateQuestion}\n            />\n          </div>\n        )}\n        {isHideQuestion ? (\n          <ul className=\"ul\">\n            {this.renderAnswers()}\n            {filteredData.map((eachQuestion) => (\n              <FetchItem\n                key={eachQuestion.id}\n                eachQuestion={eachQuestion}\n                updatingAnswers={this.updatingAnswers}\n                correct={correct}\n                wrong={wrong}\n                counter={counter}\n                updateQuestion={this.updateQuestion}\n              />\n            ))}\n          </ul>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default FetchData;\n","import FetchData from \"./components/FetchData\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FetchData />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}